---
import { YearCircleProgress } from "./CircleProgress";

const { yearMovies, totalMovies } = Astro.props;
const { year, movies } = yearMovies;
const initialYearStats = {
  seenMoviesCount: 0,
  seenPercentage: 0,
  discardMoviesCount: 0,
  discardPercentage: 0,
  unseenMoviesCount: totalMovies,
  unseenPercentage: 100,
};

// Primer elemento de las películas para el bloque inferior
//const firstMovie = movies[0];
---

<div
  class="mt-8"
  x-data=`{ 
	get yearStats() {
	  return $store?.globalState?.getYearMoviesStats(${year},${totalMovies}) || { seenMoviesCount: 0, seenPercentage: 0, discardMoviesCount:0, discardPercentage: 0, unseenMoviesCount: ${totalMovies}, unseenPercentage: 100 }
	  } 
  }`
>
  <div class="relative">
    <!-- Contenedor de los posters y círculo -->
    <div class="flex items-center justify-center bg-gray-800 relative">
      <div class="grid grid-cols-2 grid-rows-2 gap-0">
        {
          movies.map((movie) => (
            <a href={`/movies/${movie.id}`} id={movie.id}>
              <img
                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}
                alt={`${movie.title} Poster`}
                class="thumbnail hover:opacity-75 transition ease-in-out duration-150"
              />
            </a>
          ))
        }
      </div>

      <!-- Círculo con año y barra de progreso -->
      <YearCircleProgress
        client:load
        year={Number(year)}
        totalYearMovies={totalMovies}
        initialStats={initialYearStats}
      />
    </div>

    <!-- Bloque inferior -->
    <!-- <div class="mt-2 relative">
      <a href={`/year/${year}`} class="text-lg mt-2 hover:text-gray-300">
        {year}
      </a>
      <div class="flex items-center text-gray-400 text-sm mt-1">
        <span class="ml-1">TOP&nbsp;</span>
        <svg class="fill-current text-yellow-500 w-4" viewBox="0 0 24 24">
          <g data-name="Layer 2">
            <path
              d="M17.56 21a1 1 0 01-.46-.11L12 18.22l-5.1 2.67a1 1 0 01-1.45-1.06l1-5.63-4.12-4a1 1 0 01-.25-1 1 1 0 01.81-.68l5.7-.83 2.51-5.13a1 1 0 011.8 0l2.54 5.12 5.7.83a1 1 0 01.81.68 1 1 0 01-.25 1l-4.12 4 1 5.63a1 1 0 01-.4 1 1 0 01-.62.18z"
              data-name="star"></path>
          </g>
        </svg>
        <span class="ml-1">
          {Math.round(firstMovie.rating * 10) / 10}
        </span>
        <span class="mx-2">|</span>
        <span>{totalMovies} movies</span>
      </div>
      <div class="text-gray-400 text-sm">{firstMovie.genres}</div>
    </div> -->
  </div>
</div>
