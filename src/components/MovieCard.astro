---
const { movie } = Astro.props;
---

<div
  class="mt-8"
  x-data=`{ movie_id: ${movie.id}, status: (movies.find(m => m.movie_id === ${movie.id}) || {}).status || 'UNKNOWN' }`
>
  <div class="relative">
    <!-- Imagen clicable -->
    <a href={`/movies/${movie.id}`} class="block relative z-10">
      <img
        src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}
        alt={`${movie.title} Poster`}
        class="thumbnail hover:opacity-75 transition ease-in-out duration-300"
        :class="['WATCHED','DISCARD'].includes(status) ? 'grayscale' : 'grayscale-0'"
        id={`movie-poster-${movie.id}`}
      />
    </a>

    <!-- Botones flotantes en la parte inferior -->
    <div
      class="absolute inset-x-0 bottom-0 flex justify-between px-4 py-2 pointer-events-none z-20"
    >
      <button
        id={`watched-button`}
        class="bg-slate-600 hover:bg-slate-700 border-2 border-green-300 opacity-90 hover:opacity-100 text-white font-bold py-4 px-4 rounded-full mx-2 pointer-events-auto"
        @click.stop="handleStatusChange(movie_id, 'WATCHED')"
        x-show={`status === 'UNKNOWN'`}
        type="button"
      >
        <svg
          viewBox="0 0 24 24"
          class="stroke-green-600 w-16 h-16 md:w-8 md:h-8 lg:w-6 lg:h-6"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          ><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier">
            <g id="Interface / Check_Big">
              <path
                id="Vector"
                d="M4 12L8.94975 16.9497L19.5572 6.34326"
                stroke="current"
                stroke-width="4"
                stroke-linecap="round"
                stroke-linejoin="round"></path>
            </g>
          </g>
        </svg>
      </button>
      <button
        id="discard-button"
        class="bg-slate-600 hover:bg-slate-700 opacity-90 hover:opacity-100 border-2 border-red-200 text-white font-bold py-4 px-4 rounded-full pointer-events-auto"
        onclick={`handleStatusChange(${movie.id}, "DISCARD")`}
        x-show={`status === 'UNKNOWN'`}
      >
        <svg
          class="stroke-red-800 fill-red-600 w-16 h-16 md:w-8 md:h-8 lg:w-6 lg:h-6"
          viewBox="0 0 32 32"
          version="1.1"
          xmlns="http://www.w3.org/2000/svg"
          ><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier">
            <title>cancel2</title>
            <path
              d="M19.587 16.001l6.096 6.096c0.396 0.396 0.396 1.039 0 1.435l-2.151 2.151c-0.396 0.396-1.038 0.396-1.435 0l-6.097-6.096-6.097 6.096c-0.396 0.396-1.038 0.396-1.434 0l-2.152-2.151c-0.396-0.396-0.396-1.038 0-1.435l6.097-6.096-6.097-6.097c-0.396-0.396-0.396-1.039 0-1.435l2.153-2.151c0.396-0.396 1.038-0.396 1.434 0l6.096 6.097 6.097-6.097c0.396-0.396 1.038-0.396 1.435 0l2.151 2.152c0.396 0.396 0.396 1.038 0 1.435l-6.096 6.096z"
            ></path>
          </g></svg
        >
      </button>
    </div>
  </div>

  <div class="mt-2">
    <a href={`/movies/${movie.id}`} class="text-lg mt-2 hover:text-gray-300"
      >{movie.title}</a
    >
    <div class="flex items-center text-gray-400 text-sm mt-1">
      <svg class="fill-current text-yellow-500 w-4" viewBox="0 0 24 24"
        ><g data-name="Layer 2"
          ><path
            d="M17.56 21a1 1 0 01-.46-.11L12 18.22l-5.1 2.67a1 1 0 01-1.45-1.06l1-5.63-4.12-4a1 1 0 01-.25-1 1 1 0 01.81-.68l5.7-.83 2.51-5.13a1 1 0 011.8 0l2.54 5.12 5.7.83a1 1 0 01.81.68 1 1 0 01-.25 1l-4.12 4 1 5.63a1 1 0 01-.4 1 1 1 0 01-.62.18z"
            data-name="star"></path></g
        ></svg
      >
      <span class="ml-1">{Math.round(movie.rating * 10) / 10}</span>
      <span class="mx-2">|</span>
      <span>{movie.release_date}</span>
    </div>
    <div class="text-gray-400 text-sm">{movie.genres}</div>
  </div>
</div>

<script>
  window.handleStatusChange = async function (movieId, newStatus) {
    if (localStorage.getItem("user")) {
      const user = JSON.parse(localStorage.getItem("user"));
      const response = await fetch("/api/user/movies/" + movieId, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          userEmail: user.email,
          movieId,
          status: newStatus,
        }),
      });

      if (response.ok) {
        console.log("Estado actualizado correctamente");
        // Actualiza la UI seg√∫n sea necesario
      }
    }
  };
</script>
